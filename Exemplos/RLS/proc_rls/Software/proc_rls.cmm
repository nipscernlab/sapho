#PRNAME proc_rls
#NUBITS 32
#NBMANT 23
#NBEXPO 8
#NDSTAC 5
#SDEPTH 5
#NUIOIN 2
#NUIOOU 2

float x[4];
float w[4];
float P[4][4];

void rls_update(float d)
{
    // calculo do erro e ------------------------------------------------------

    float e = d - <w|x>;
    
    // calculo do vetor de ganho K --------------------------------------------

    float Px[4] = |P|x>;
    float g     = 1.0/(0.99 + <x|Px>);
    float K [4] = g|Px>;

    // atualiza os pesos w ----------------------------------------------------

    w = |w> + e|K>;

    // atualiza a matriz P ----------------------------------------------------

    P = |P| - |K><Px|;
    P = 1/0.99|P|;
}

void main()
{
    // ------------------------------------------------------------------------
    // inicializa P e w -------------------------------------------------------
    // ------------------------------------------------------------------------

    P = |I|;
    w = |0>;

    // ------------------------------------------------------------------------
    // loop nos dados ---------------------------------------------------------
    // ------------------------------------------------------------------------

    int j = 0;
    int k = 0;
    while (j < 20)
    {
        // --------------------------------------------------------------------
        // le os valores de x[n] ----------------------------------------------
        // --------------------------------------------------------------------
        
        k = 0;
        while (k < 4)
        {
            x[k] = in(0);
            k++;
        }

        // --------------------------------------------------------------------
        // aplica uma iteracao RLS --------------------------------------------
        // --------------------------------------------------------------------

        rls_update(in(1));

        // --------------------------------------------------------------------
        // externa os coeficientes w ------------------------------------------
        // --------------------------------------------------------------------

        k = 0;
        while (k < 4)
        {
            out(0,1000.0*w[k]);
            k++;
        }

        j++;
    }
}